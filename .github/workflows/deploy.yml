name: Deploy to Production

on:
  push:
    branches: [ main ]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  VPS_HOST: ${{ secrets.VPS_HOST }}
  VPS_USERNAME: ${{ secrets.VPS_USERNAME }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Frontend
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          push: true
          tags: ${{ env.DOCKER_USERNAME }}/nextjs-app:latest
          cache-from: type=registry,ref=${{ env.DOCKER_USERNAME }}/nextjs-app:latest
          cache-to: type=inline

      - name: Build and push Backend
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          push: true
          tags: ${{ env.DOCKER_USERNAME }}/nodejs-app:latest
          cache-from: type=registry,ref=${{ env.DOCKER_USERNAME }}/nodejs-app:latest
          cache-to: type=inline

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.VPS_HOST }}
          username: ${{ env.VPS_USERNAME }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            # Buat folder aplikasi jika belum ada
            mkdir -p /var/www/test.hambalitubagus.com
            
            # Konfigurasi Nginx
            sudo tee /etc/nginx/sites-available/test.hambalitubagus.com << 'EOF'
            server {
                listen 80;
                server_name test.hambalitubagus.com;

                location / {
                    proxy_pass http://nextjs-container:3000;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection 'upgrade';
                    proxy_set_header Host $host;
                    proxy_cache_bypass $http_upgrade;
                }

                location /api {
                    proxy_pass http://nodejs-container:4005;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection 'upgrade';
                    proxy_set_header Host $host;
                    proxy_cache_bypass $http_upgrade;
                }
            }
            EOF
            
            # Aktifkan konfigurasi Nginx
            sudo ln -sf /etc/nginx/sites-available/test.hambalitubagus.com /etc/nginx/sites-enabled/
            sudo rm -f /etc/nginx/sites-enabled/default
            
            # Buat docker-compose.yml
            echo 'version: "3"
            services:
              frontend:
                image: ${{ env.DOCKER_USERNAME }}/nextjs-app:latest
                container_name: nextjs-container
                ports:
                  - "3000:3000"
                networks:
                  - app-network
                restart: always

              backend:
                image: ${{ env.DOCKER_USERNAME }}/nodejs-app:latest
                container_name: nodejs-container
                ports:
                  - "4005:4005"
                networks:
                  - app-network
                restart: always

            networks:
              app-network:
                driver: bridge' > /var/www/test.hambalitubagus.com/docker-compose.yml
            
            # Navigasi ke folder aplikasi
            cd /var/www/test.hambalitubagus.com
            
            # Hentikan container yang berjalan
            docker-compose down || true
            
            # Pull image terbaru
            docker-compose pull
            
            # Jalankan container
            docker-compose up -d
            
            # Reload Nginx
            sudo nginx -t && sudo systemctl reload nginx
            
            # Bersihkan Docker
            docker system prune -f
