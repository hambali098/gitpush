name: Deploy to Production

on:
  push:
    branches: [ main ]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  VPS_HOST: ${{ secrets.VPS_HOST }}
  VPS_USERNAME: ${{ secrets.VPS_USERNAME }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Frontend
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          push: true
          tags: ${{ env.DOCKER_USERNAME }}/nextjs-app:latest

      - name: Build and push Backend
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          push: true
          tags: ${{ env.DOCKER_USERNAME }}/nodejs-app:latest

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.VPS_HOST }}
          username: ${{ env.VPS_USERNAME }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            # Pull latest images
            docker pull ${{ env.DOCKER_USERNAME }}/nextjs-app:latest
            docker pull ${{ env.DOCKER_USERNAME }}/nodejs-app:latest
            
            # Stop and remove existing containers
            docker stop nextjs-container || true
            docker stop nodejs-container || true
            docker rm nextjs-container || true
            docker rm nodejs-container || true
            
            # Run new containers
            docker run -d --name nodejs-container \
              -p 4005:4005 \
              --restart always \
              ${{ env.DOCKER_USERNAME }}/nodejs-app:latest
              
            docker run -d --name nextjs-container \
              -p 3000:3000 \
              --restart always \
              ${{ env.DOCKER_USERNAME }}/nextjs-app:latest
            
            # Cleanup unused images
            docker system prune -f